

@{
	var Title = Model.WithoutSettings.String(BlogKeys.Title);
	var PageTitle = Context.String(BlogKeys.Title) + (string.IsNullOrWhiteSpace(Title) ? string.Empty : " - " + Title);
	var Slug = Context.GetLink(Model);
	var SourceFile = Model.String(Keys.SourceFileName);
	var lead = Model.String(BlogKeys.Lead);
	var imgUrl = Model.String(BlogKeys.Image);
	var Tags = Model.Get<string[]>(BlogKeys.Tags);
}
<!DOCTYPE html>
<html>

<head>
        @Html.Partial("_Head")
</head>

<body class="is-preload">
        <div id="wrapper">
                @Html.Partial("_Header")
                @Html.Partial("_Menu")
                <div id="main">
                        	<article class="post">
								<header>
									<div class="title">
										<h2>@Title</h2>
										@if(!string.IsNullOrWhiteSpace(lead))
                                        {
                                            <p>@lead</p>
                                        }
									</div>
									<div class="meta">
										<time class="published" datetime='@(Model.Get<DateTime>(BlogKeys.Published))'>@(Model.Get<DateTime>(BlogKeys.Published).ToString("MMMM dd, yyyy"))</time>
									</div>
								</header>
								<span class="image featured">
									@if(!string.IsNullOrWhiteSpace(imgUrl))
                                        {
											<img src="@imgUrl" alt="" />
										}
									</span>
								@RenderBody()
								<footer>
									<ul class="stats">
                    					@if (Tags != null)
                    					{

                        					@foreach (string tag in Tags.OrderBy(x => x))
                        					{
                        						IDocument tagDocument = Documents[Blog.Tags].FirstOrDefault(x => x.String(BlogKeys.Tag) == tag && x.Get<int>(Keys.CurrentPage) == 1);
                            					if(tagDocument != null)
                            					{
                                					<li><a role="button" href="@Context.GetLink(tagDocument)" class="btn btn-default btn-xs">@tag</a></li>
                            					}
                        					}
                    					}
                        				<li><a href="@Context.GetLink(Model)#disqus_thread" class="icon solid fa-comment">0 Comments</a></li>
                					</ul>
									
								</footer>
								<div id="disqus_thread"></div>
<script>


var disqus_config = function () {
this.page.url = "@Context.GetLink(Model, true)";  
this.page.identifier = "@Model.FilePath(Keys.RelativeFilePath).FileNameWithoutExtension.FullPath"; 
};

(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://michaelburch.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
							</article>
                </div>

        
        </div>
		<script id="dsq-count-scr" src="//michaelburch.disqus.com/count.js" async></script>
        @Html.Partial("_PostFooter")
        </body>
        
</html>



