

@{
	var Title = Model.WithoutSettings.String(BlogKeys.Title);
	var PageTitle = Context.String(BlogKeys.Title) + (string.IsNullOrWhiteSpace(Title) ? string.Empty : " - " + Title);
	var Slug = Model.String(Keys.RelativeFilePath).ToLower().Substring(Model.String(Keys.RelativeFilePath).LastIndexOf('/') +1).Replace(".html","");
	var SourceFile = Model.String(Keys.SourceFileName);
	var lead = Model.String(BlogKeys.Lead);
	var imgUrl = Model.String(BlogKeys.Image);
	var Tags = Model.Get<string[]>(BlogKeys.Tags);
}
<!DOCTYPE html>
<html>

<head>
        @Html.Partial("_Head")
</head>

<body class="is-preload">
        <div id="wrapper">
                @Html.Partial("_Header")
                
                <div id="main">
                        	<article class="post">
								<header>
									<div class="title">
										<h2>@Title</h2>
										@if(!string.IsNullOrWhiteSpace(lead))
                                        {
                                            <p>@lead</p>
                                        }
									</div>
									<div class="meta">
										<time class="published" datetime='@(Model.Get<DateTime>(BlogKeys.Published))'>@(Model.Get<DateTime>(BlogKeys.Published).ToString("MMMM dd, yyyy"))</time>
									</div>
								</header>
								<span class="image featured">
									@if(!string.IsNullOrWhiteSpace(imgUrl))
                                        {
											<img src="@imgUrl" alt="" />
										}
									</span>
								@RenderBody()
								<footer>
									<ul class="stats">
                    					@if (Tags != null)
                    					{

                        					@foreach (string tag in Tags.OrderBy(x => x))
                        					{
                        						IDocument tagDocument = Documents[Blog.Tags].FirstOrDefault(x => x.String(BlogKeys.Tag) == tag && x.Get<int>(Keys.CurrentPage) == 1);
                            					if(tagDocument != null)
                            					{
                                					<li><a role="button" href="@Context.GetLink(tagDocument)" class="btn btn-default btn-xs">@tag</a></li>
                            					}
                        					}
                    					}
                        				<li><a href="#" class="icon solid fa-comment">1</a></li>
                					</ul>
								</footer>
							</article>
                </div>

        
        </div>
        @Html.Partial("_Footer")
        </body>
        
</html>



