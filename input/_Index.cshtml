@{
    
    foreach(IDocument post in Model.Get<IEnumerable<IDocument>>("PageDocuments"))
    {                
    string lead = post.String(BlogKeys.Lead);
    string imgUrl = post.String(BlogKeys.Image);
    <article class="post">
        <header>
                <div class="title">
                        <h2><a href="@Context.GetLink(post)">@post.WithoutSettings.String(BlogKeys.Title) </a></h2>
                        @if(!string.IsNullOrWhiteSpace(lead))
                        {
                            <p>@lead</p>
                        }
                    </div>
                    <div class="meta">
                        <time class="published" datetime='@(post.Get<DateTime>(BlogKeys.Published).ToString("MMMM dd, yyyy"))'>@(post.Get<DateTime>(BlogKeys.Published).ToString("MMMM dd, yyyy"))</time>
                    </div>
        </header>
        @if(!string.IsNullOrWhiteSpace(imgUrl))
        {
            <a href="@Context.GetLink(post)" class="image featured"><img src="@imgUrl" alt="" /></a>
        }
        @if(Context.Bool(BlogKeys.IndexFullPosts))
        {
            @Html.Raw(post.Content)
        }
        else
        {
            @Html.Raw(post.String(BlogKeys.Excerpt))
        }
        <footer>
                <ul class="actions">
                    <li><a href="@Context.GetLink(post)" class="button large">Continue Reading</a></li>
                </ul>
                <ul class="stats">
                    <li><a href="#">General</a></li>
                    <li><a href="#" class="icon solid fa-comment">1</a></li>
                </ul>
            </footer>             
    </article>  
 
    
}
<ul class="actions pagination">
            
    @{
        var nextPageClass = "button large previous";  
        var previousPageClass = "button large next";
    }
    @if(!Model.Bool(Keys.HasPreviousPage))
    {
        previousPageClass += " disabled";
    }                

    @if(!Model.Bool(Keys.HasNextPage))
    {
        nextPageClass += " disabled";
        
    }
    <li><a href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))" class="@previousPageClass">Previous Page</a></li>
    <li><a href="@(Context.GetLink(Model.Document(Keys.NextPage)))" class="@nextPageClass">Next Page</a></li>

</ul>   
<p>Page @Model.String("CurrentPage") of @Model.String("TotalPages")</p>        
}
